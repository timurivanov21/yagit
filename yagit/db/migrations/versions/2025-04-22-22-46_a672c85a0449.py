"""empty message.

Revision ID: a672c85a0449
Revises: 819cbf6e030b
Create Date: 2025-04-22 22:46:13.101253

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "a672c85a0449"
down_revision = "819cbf6e030b"
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Run the migration."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "projects",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("gitlab_token", sa.Text(), nullable=False),
        sa.Column("tracker_token", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(op.f("ix_projects_id"), "projects", ["id"], unique=False)
    op.create_table(
        "automation_rules",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("project_id", sa.Integer(), nullable=False),
        sa.Column(
            "event_type",
            sa.Enum(
                "BRANCH_CREATE",
                "PUSH",
                "TAG_PUSH"
                "MERGE_REQUEST_OPENED",
                "MERGE_REQUEST_MERGED",
                "MERGE_REQUEST_CLOSED",
                name="giteventtype",
            ),
            nullable=False,
        ),
        sa.Column("target_branch", sa.String(length=255), nullable=True),
        sa.Column("tracker_column_id", sa.String(length=64), nullable=False),
        sa.Column("tracker_column_name", sa.String(length=255), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["project_id"], ["projects.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "project_id",
            "event_type",
            "target_branch",
            name="uq_rule_per_project_event_branch",
        ),
    )
    op.create_index(
        op.f("ix_automation_rules_event_type"),
        "automation_rules",
        ["event_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_automation_rules_id"),
        "automation_rules",
        ["id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_automation_rules_project_id"),
        "automation_rules",
        ["project_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Undo the migration."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_automation_rules_project_id"), table_name="automation_rules")
    op.drop_index(op.f("ix_automation_rules_id"), table_name="automation_rules")
    op.drop_index(op.f("ix_automation_rules_event_type"), table_name="automation_rules")
    op.drop_table("automation_rules")
    op.drop_index(op.f("ix_projects_id"), table_name="projects")
    op.drop_table("projects")
    # ### end Alembic commands ###
